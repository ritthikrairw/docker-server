version: "3.3"

services:

  traefik:
    image: "traefik:v2.8.4"
    container_name: ${APP_NAME:?docker-server}-traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      # Web
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${APP_ROOT}/config/traefik/static.yml:/etc/traefik/traefik.yml:ro
      - ${APP_ROOT}/config/traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ${APP_ROOT}/certs:/etc/certs:ro
      - ${APP_ROOT}/data/traefik/access.log:/logs/access.log
    networks:
      - proxy

  whoami:
    image: "traefik/whoami:v1.8.1"
    container_name: ${APP_NAME:?docker-server}-whoami
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.whoami.rule=Host(`${WHOAMI_HOST_NAME}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
    networks:
      - proxy
    depends_on:
      - traefik

  portainer:
    image: portainer/portainer-ce:2.15.0-alpine
    container_name: ${APP_NAME:?docker-server}-portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOST_NAME}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - proxy
    depends_on:
      - traefik

  filebrowser:
    image: filebrowser/filebrowser:v2.22.4
    container_name: ${APP_NAME:?docker-server}-filebrowser
    restart: always
    security_opt:
      - no-new-privileges:true
    user: "${UID}:${GID}"
    volumes:
      - ${FILEBROWSER_ROOT}:/srv
      - ${APP_ROOT}/data/filebrowser/filebrowser.db:/database.db
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.filebrowser.rule=Host(`${FILEBROWSER_HOST_NAME}`)"
      - "traefik.http.routers.filebrowser.entrypoints=websecure"
      - "traefik.http.routers.filebrowser.tls=true"
      - "traefik.http.routers.filebrowser.service=filebrowser"
      - "traefik.http.services.filebrowser.loadbalancer.server.port=80"
    networks:
      - proxy
    depends_on:
      - traefik

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: ${APP_NAME:?docker-server}-autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=5 # check every 5 seconds
      - AUTOHEAL_START_PERIOD=0 # wait 0 seconds before first health check
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10 # Docker waits max 10 seconds (the Docker default) for a container to stop before killing during restarts (container overridable via label, see below)
      - DOCKER_SOCK=/var/run/docker.sock # Unix socket for curl requests to Docker API
      - CURL_TIMEOUT=30 # --max-time seconds for curl requests to Docker API
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  dozzle:
    image: amir20/dozzle:v4.0.2
    container_name: ${APP_NAME:?docker-server}-dozzle
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.dozzle.rule=Host(`${DOZZLE_HOST_NAME}`)"
      - "traefik.http.routers.dozzle.entrypoints=websecure"
      - "traefik.http.routers.dozzle.tls=true"
      - "traefik.http.routers.dozzle.service=dozzle"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"
    networks:
      - proxy


  heimdall:
    image: linuxserver/heimdall:latest
    container_name: ${APP_NAME:?docker-server}-heimdall
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Bangkok
    volumes:
      - ${APP_ROOT}/data/heimdall/:/config
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.heimdall.rule=Host(`${HEIMDALL_HOST_NAME}`)"
      - "traefik.http.routers.heimdall.entrypoints=websecure"
      - "traefik.http.routers.heimdall.tls=true"
      - "traefik.http.routers.heimdall.service=heimdall"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
    networks:
      - proxy

volumes:
  portainer_data:
    name: portainer_data

networks:
  proxy:
    external: true
